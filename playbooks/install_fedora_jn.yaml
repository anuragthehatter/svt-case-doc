---
- hosts: all
  vars:
    ###https://docs.ansible.com/ansible/latest/reference_appendices/faq.html#how-do-i-handle-python-not-having-a-python-interpreter-at-usr-bin-python-on-a-remote-machine
    ###
    ansible_python_interpreter: /usr/bin/python3
  vars_files:
    - external_vars.yaml
  tasks:
  - name: print hostname
    debug:
      msg: "hostname: {{ inventory_hostname }}"

  - name: dnf jump node pkgs
    dnf:
      name: "{{ packages }}"
      state: present
    vars:
      packages:
        - docker
        - ansible
        - java-1.8.0-openjdk
        - bash-completion
        - git
        #- python2-libselinux
        - tmux
    become: true

  - name: start docker
    systemd:
      name: docker
      state: started
      enabled: True
    become: true

  - name: run docker postinstall step 1
    group:
      name: docker
      state: present
    become: true

  - name: print ansible_user
    debug:
      msg: "ansible_user: {{ ansible_user }}"

  - name: run docker postinstall step 2
    command: "usermod -aG docker {{ ansible_user }}"
    become: true

  - name: create temporary build directory
    tempfile:
      state: directory
      prefix: fedora.install.
    register: tmp_folder_result

  - name: print tmp_folder_result
    debug:
      msg: "tmp_folder_result: {{ tmp_folder_result.path }}"

  - name: extract oc
    unarchive:
      src: https://github.com/openshift/origin/releases/download/v3.10.0-rc.0/openshift-origin-client-tools-v3.10.0-rc.0-c20e215-linux-64bit.tar.gz
      dest: "{{ tmp_folder_result.path }}"
      remote_src: yes

  - name: copy oc binary
    command: cp "{{ tmp_folder_result.path }}/openshift-origin-client-tools-v3.10.0-rc.0-c20e215-linux-64bit/oc" /usr/bin/oc
    become: true

  - name: git clone svt
    git:
      repo: 'https://github.com/openshift/svt.git'
      dest: "/home/{{ ansible_user }}/svt"
      clone: yes

  - name: git clone openshift-ansible
    git:
      repo: 'https://github.com/openshift/openshift-ansible.git'
      dest: "/home/{{ ansible_user }}/openshift-ansible"
      clone: yes

  ### https://github.com/bayandin/webpagetest-private/issues/1
  - name: copy perf key file
    copy:
      src: "{{ perf_private_key_file }}"
      dest: "/home/{{ ansible_user }}/"
      mode: 0600

  - name: import golang repo key
    rpm_key:
      state: present
      key: https://mirror.go-repo.io/fedora/RPM-GPG-KEY-GO-REPO
    become: true

  - name: Download go repo
    get_url:
      url: https://mirror.go-repo.io/fedora/go-repo.repo
      dest: /etc/yum.repos.d/go-repo.repo
    become: true

  - name: dnf golang pkgs
    dnf:
      name: "{{ packages }}"
      state: present
    vars:
      packages:
      - golang
      - golang-race
      - make
      - gcc
      - zip
      - mercurial
      - krb5-devel
      - bsdtar
      - bc
      - rsync
      - bind-utils
      - file
      - jq
      - tito
      - createrepo
      - openssl
      - gpgme
      - gpgme-devel
      - libassuan
      - libassuan-devel
    become: true

  - name: check golang version
    shell: go version
    register: go_version_result

  - name: output golang version
    debug:
      msg: "go_version_result: {{ go_version_result }}"

  - name: add go env vars into ~/.bash_profile
    blockinfile:
      path: "~/.bash_profile"
      marker: "### {mark} ANSIBLE MANAGED BLOCK ###"
      insertbefore: "export PATH"
      content: |
        export GOPATH=$HOME/go
        export PATH=$PATH:$GOPATH/bin
        export OS_OUTPUT_GOPATH=1

  - name: go get openshift/origin repo
    command: go get github.com/openshift/origin

  - name: go get imagebuilder
    command: go get -u github.com/openshift/imagebuilder/cmd/imagebuilder

  - name: dnf other pkgs
    dnf:
      name: "{{ packages }}"
      state: present
    vars:
      packages:
      - buildah
      - podman
      - skopeo
    become: true
    tags:
    - test

### TODO
### copy script: kcfg_scp.sh, softlinks for Jenkins keys
### oc auto complete
### pip dep. for cl and conc. build scripts
